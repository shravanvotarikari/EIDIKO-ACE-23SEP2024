

CREATE COMPUTE MODULE timer_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		 CALL CopyEntireMessage();
		RETURN TRUE;
	END;

CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
--		Action is to set the properties of Notification Node
		SET OutputLocalEnvironment.TimeoutRequest.Action = 'SET';
--		Identifier used to uniquely identify each message request
		SET OutputLocalEnvironment.TimeoutRequest.Identifier = 'Request_' || CAST(CURRENT_TIMESTAMP AS CHARACTER);
--		Start date to trig the Notification Node
		SET OutputLocalEnvironment.TimeoutRequest.StartDate = '2024-11-29';
--		Start time to trig the Notification Node
		SET OutputLocalEnvironment.TimeoutRequest.StartTime = '06:13:00';
--		Interval Specifies after how much time (seconds) we want to trig the Notification node
		SET OutputLocalEnvironment.TimeoutRequest.Interval = 10;
--		After Each Interval of time the Notification Node will trig once,This will happen for Count No. of times
		SET OutputLocalEnvironment.TimeoutRequest.Count = 2;
--		IgnoreMissed is used to handle the Ignored Messages by Notification node
		SET OutputLocalEnvironment.TimeoutRequest.IgnoreMissed = false;
--		AllowOverwrite = true allows us to send multiple msg requests with same Identifier
		SET OutputLocalEnvironment.TimeoutRequest.AllowOverwrite = true;
		
		
	END;
END MODULE;
