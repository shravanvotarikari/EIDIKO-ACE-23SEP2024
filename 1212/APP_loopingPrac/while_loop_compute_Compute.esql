

CREATE COMPUTE MODULE while_loop_compute_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
	    CALL CopyEntireMessage();
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		--SET OutputRoot = InputRoot;
		CREATE FIELD OutputRoot.XMLNSC.Customers;
		
		DECLARE i INTEGER 1;
        DECLARE customerCount INTEGER CARDINALITY(InputRoot.XMLNSC.Customers.Customer[]);
        
        WHILE i <=customerCount DO 
        	CREATE FIELD OutputRoot.XMLNSC.Customers.Customer[i];
        	
        	SET OutputRoot.XMLNSC.Customers.Customer[i].Name = InputRoot.XMLNSC.Customers.Customer[i].Name;
            SET OutputRoot.XMLNSC.Customers.Customer[i].Age = InputRoot.XMLNSC.Customers.Customer[i].Age;
            
             DECLARE isAdult BOOLEAN (CAST(InputRoot.XMLNSC.Customers.Customer[i].Age AS INTEGER) > 18);
            SET OutputRoot.XMLNSC.Customers.Customer[i].IsAdult = (CASE 
                WHEN isAdult THEN 'Yes' 
                ELSE 'No' 
            END);
              SET i = i + 1;
        END WHILE;

      
	END;
END MODULE;
