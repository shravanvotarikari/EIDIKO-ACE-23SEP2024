DECLARE reqId SHARED INTEGER 1;

CREATE COMPUTE MODULE SF_Dynamic_Log_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		 CALL CopyEntireMessage();
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		--SET OutputRoot=InputRoot;
		SET OutputRoot.JSON.Data = InputRoot.XMLNSC.root;

		DECLARE appName CHARACTER ApplicationLabel;
		DECLARE msgFlwName CHARACTER MessageFlowLabel;
		DECLARE nodeName CHARACTER BrokerName;
		DECLARE egName CHARACTER ExecutionGroupLabel;
		DECLARE chnlId CHARACTER null;
		DECLARE reqTime TIMESTAMP CURRENT_TIMESTAMP ;
		--DECLARE reqMsg CHARACTER InputRoot.XMLNSC.root;
		DECLARE resTime TIMESTAMP;
		DECLARE resMsg CHARACTER CAST(ASBITSTREAM(OutputRoot.JSON.Data) AS CHARACTER CCSID 1208);
		
		SET OutputRoot.DFDL.dynamicLog.body.body_elem1 = appName;
		SET OutputRoot.DFDL.dynamicLog.body.body_elem2 = msgFlwName;
		SET OutputRoot.DFDL.dynamicLog.body.body_elem3 = nodeName;
		SET OutputRoot.DFDL.dynamicLog.body.body_elem4 = egName;
		SET OutputRoot.DFDL.dynamicLog.body.body_elem5 = 'channelid';
		SET OutputRoot.DFDL.dynamicLog.body.body_elem6 = reqId;
		SET reqId = reqId+1;
		SET OutputRoot.DFDL.dynamicLog.body.body_elem7 = reqTime;
		SET OutputRoot.DFDL.dynamicLog.body.body_elem8 = CAST(ASBITSTREAM(InputRoot.XMLNSC.root) AS CHARACTER CCSID 1208);
		SET resTime = CURRENT_TIMESTAMP;
		SET OutputRoot.DFDL.dynamicLog.body.body_elem9 = resTime;
		SET OutputRoot.DFDL.dynamicLog.body.body_elem10 = resMsg;
		
		SET OutputRoot.JSON = null;
		
		SET OutputLocalEnvironment.Destination.File.Name = 'Audit_Log_' || CAST(CURRENT_DATE AS CHARACTER format 'dd-mm-yyyy');
		
				
		propagate TO TERMINAL 'out1';
		
		SET OutputRoot.DFDL = null;
		
		SET OutputRoot.XMLNSC = InputRoot.XMLNSC;
		
		
	END;
END MODULE;
